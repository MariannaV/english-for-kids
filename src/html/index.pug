include ../components/head/head
include ../components/header/header.pug

mixin card(data)
    - const { setId, text: setName } = data
    a.category-card(onclick=`navigateToSet(event, ${JSON.stringify({setId, setName})})`)
        img(src=data.src)
        p #{setName}



doctype html
html(lang="ru")
    +head({"title": "Главная", "description": "Главная страница"})
        link(rel="stylesheet" href="styles/index.css")
    body.page-home.train
        .wrapper-container
            +header()
            main(id='contentContainer')
                .categories-container.main-container
                    +card({
                        src: "img/content/dance.jpg",
                        text: "Action (set A)",
                        setId: 'action-0',
                        page: 'set'
                    })
                    +card({
                        src: "img/content/swim.jpg",
                        text: "Action (set B)",
                        setId: 'action-1',
                        page: 'set'
                    })
                    +card({
                        src: "img/content/drop.jpg",
                        text: "Action (set C)",
                        setId: 'action-2',
                        page: 'set'
                    })
                    +card({
                        src: "img/content/friendly.jpg",
                        text: "Adjective",
                        setId: 'adjective-0',
                        page: 'set'
                    })
                    +card({
                        src: "img/content/cat.jpg",
                        text: "Animal (set A)",
                        setId: 'animal-0',
                        page: 'set'
                    })
                    +card({
                        src: "img/content/bird.jpg",
                        text: "Animal (set B)",
                        setId: 'animal-1',
                        page: 'set'
                    })
                    +card({
                        src: "img/content/blouse.jpg",
                        text: "Clothes",
                        setId: 'clothes-0',
                        page: 'set'
                    })
                    +card({
                        src: "img/content/smile.jpg",
                        text: "Emotion",
                        setId: 'emotion-0',
                        page: 'set'
                    })


    script.
        const setData = new Map([['action-0', {
            title: 'Action (set A)',
            cards: [ //[ 'cry', { word: 'cry', image: '' }]
                {
                    word: 'cry',
                    translation: 'плакать',
                    image: 'img/content/cry.jpg',
                    audioSrc: 'audio/cry.mp3'
                },
                {
                    word: 'dance',
                    translation: 'танцевать',
                    image: 'img/content/dance.jpg',
                    audioSrc: 'audio/dance.mp3'
                },
                {
                    word: 'dive',
                    translation: 'нырять',
                    image: 'img/content/dive.jpg',
                    audioSrc: 'audio/dive.mp3'
                },
                {
                    word: 'draw',
                    translation: 'рисовать',
                    image: 'img/content/draw.jpg',
                    audioSrc: 'audio/draw.mp3'
                },
                {
                    word: 'fish',
                    translation: 'ловить рыбу',
                    image: 'img/content/fish.jpg',
                    audioSrc: 'audio/fish.mp3'
                },
                {
                    word: 'fly',
                    translation: 'летать',
                    image: 'img/content/fly.jpg',
                    audioSrc: 'audio/fly.mp3'
                },
                {
                    word: 'hug',
                    translation: 'обнимать',
                    image: 'img/content/hug.jpg',
                    audioSrc: 'audio/hug.mp3'
                },
                {
                    word: 'jump',
                    translation: 'прыгать',
                    image: 'img/content/jump.jpg',
                    audioSrc: 'audio/jump.mp3'
                }

            ]
        }],
            ['action-1', {
                title: "Action (set B)",
                cards: [
                    {
                        word: 'open',
                        translation: 'открывать',
                        image: 'img/content/open.jpg',
                        audioSrc: 'audio/open.mp3'
                    },
                    {
                        word: 'play',
                        translation: 'играть',
                        image: 'img/content/play.jpg',
                        audioSrc: 'audio/play.mp3'
                    },
                    {
                        word: 'point',
                        translation: 'указывать',
                        image: 'img/content/point.jpg',
                        audioSrc: 'audio/point.mp3'
                    },
                    {
                        word: 'ride',
                        translation: 'ездить',
                        image: 'img/content/ride.jpg',
                        audioSrc: 'audio/ride.mp3'
                    },
                    {
                        word: 'run',
                        translation: 'бегать',
                        image: 'img/content/run.jpg',
                        audioSrc: 'audio/run.mp3'
                    },
                    {
                        word: 'sing',
                        translation: 'петь',
                        image: 'img/content/sing.jpg',
                        audioSrc: 'audio/sing.mp3'
                    },
                    {
                        word: 'skip',
                        translation: 'пропускать, прыгать',
                        image: 'img/content/skip.jpg',
                        audioSrc: 'audio/skip.mp3'
                    },
                    {
                        word: 'swim',
                        translation: 'плавать',
                        image: 'img/content/swim.jpg',
                        audioSrc: 'audio/swim.mp3'
                    }
                ]
            }],
            ['action-2', {
                cards: [
                    {
                        word: 'argue',
                        translation: 'спорить',
                        image: 'img/content/argue.jpg',
                        audioSrc: 'audio/argue.mp3'
                    },
                    {
                        word: 'build',
                        translation: 'строить',
                        image: 'img/content/build.jpg',
                        audioSrc: 'audio/build.mp3'
                    },
                    {
                        word: 'carry',
                        translation: 'нести',
                        image: 'img/content/carry.jpg',
                        audioSrc: 'audio/carry.mp3'
                    },
                    {
                        word: 'catch',
                        translation: 'ловить',
                        image: 'img/content/catch.jpg',
                        audioSrc: 'audio/catch.mp3'
                    },
                    {
                        word: 'drive',
                        translation: 'водить машину',
                        image: 'img/content/drive.jpg',
                        audioSrc: 'audio/drive.mp3'
                    },
                    {
                        word: 'drop',
                        translation: 'падать',
                        image: 'img/content/drop.jpg',
                        audioSrc: 'audio/drop.mp3'
                    },
                    {
                        word: 'pull',
                        translation: 'тянуть',
                        image: 'img/content/pull.jpg',
                        audioSrc: 'audio/pull.mp3'
                    },
                    {
                        word: 'push',
                        translation: 'толкать',
                        image: 'img/content/push.jpg',
                        audioSrc: 'audio/push.mp3'
                    }

                ],
                title: "Action (set C)"
            }],
            ['adjective-0', {
                title: "Adjective",
                cards: [{
                    word: 'big',
                    translation: 'большой',
                    image: 'img/content/big.jpg',
                    audioSrc: 'audio/big.mp3'
                },
                {
                    word: 'small',
                    translation: 'маленький',
                    image: 'img/content/small.jpg',
                    audioSrc: 'audio/small.mp3'
                },
                {
                    word: 'fast',
                    translation: 'быстрый',
                    image: 'img/content/fast.jpg',
                    audioSrc: 'audio/fast.mp3'
                },
                {
                    word: 'slow',
                    translation: 'медленный',
                    image: 'img/content/slow.jpg',
                    audioSrc: 'audio/slow.mp3'
                },
                {
                    word: 'friendly',
                    translation: 'дружелюбный',
                    image: 'img/content/friendly.jpg',
                    audioSrc: 'audio/friendly.mp3'
                },

                {
                    word: 'unfriendly',
                    translation: 'недружелюбный',
                    image: 'img/content/unfriendly.jpg',
                    audioSrc: 'audio/unfriendly.mp3'
                },
                    {
                        word: 'young',
                        translation: 'молодой',
                        image: 'img/content/young.jpg',
                        audioSrc: 'audio/young.mp3'
                    },
                    {
                        word: 'old',
                        translation: 'старый',
                        image: 'img/content/old.jpg',
                        audioSrc: 'audio/old.mp3'
                    }

                ]
            }],
            ['animal-0', {
                title: "Animal (set A)",
                cards: [
                    {
                        word: 'cat',
                        translation: 'кот',
                        image: 'img/content/cat.jpg',
                        audioSrc: 'audio/cat.mp3'
                    },
                    {
                        word: 'chick',
                        translation: 'цыплёнок',
                        image: 'img/content/chick.jpg',
                        audioSrc: 'audio/chick.mp3'
                    },
                    {
                        word: 'chicken',
                        translation: 'курица',
                        image: 'img/content/chicken.jpg',
                        audioSrc: 'audio/chicken.mp3'
                    },
                    {
                        word: 'dog',
                        translation: 'собака',
                        image: 'img/content/dog.jpg',
                        audioSrc: 'audio/dog.mp3'
                    },
                    {
                        word: 'horse',
                        translation: 'лошадь',
                        image: 'img/content/horse.jpg',
                        audioSrc: 'audio/horse.mp3'
                    },
                    {
                        word: 'pig',
                        translation: 'свинья',
                        image: 'img/content/pig.jpg',
                        audioSrc: 'audio/pig.mp3'
                    },
                    {
                        word: 'rabbit',
                        translation: 'кролик',
                        image: 'img/content/rabbit.jpg',
                        audioSrc: 'audio/rabbit.mp3'
                    },
                    {
                        word: 'sheep',
                        translation: 'овца',
                        image: 'img/content/sheep.jpg',
                        audioSrc: 'audio/sheep.mp3'
                    }
                ],

            }],
            ["animal-1", {
                title: "Animal",
                cards: [
                    {
                        word: 'bird',
                        translation: 'птица',
                        image: 'img/content/bird.jpg',
                        audioSrc: 'audio/bird.mp3'
                    },
                    {
                        word: 'fish',
                        translation: 'рыба',
                        image: 'img/content/fish1.jpg',
                        audioSrc: 'audio/fish.mp3'
                    },
                    {
                        word: 'frog',
                        translation: 'жаба',
                        image: 'img/content/frog.jpg',
                        audioSrc: 'audio/frog.mp3'
                    },
                    {
                        word: 'giraffe',
                        translation: 'жирафа',
                        image: 'img/content/giraffe.jpg',
                        audioSrc: 'audio/giraffe.mp3'
                    },
                    {
                        word: 'lion',
                        translation: 'лев',
                        image: 'img/content/lion.jpg',
                        audioSrc: 'audio/lion.mp3'
                    },
                    {
                        word: 'mouse',
                        translation: 'мышь',
                        image: 'img/content/mouse.jpg',
                        audioSrc: 'audio/mouse.mp3'
                    },
                    {
                        word: 'turtle',
                        translation: 'черепаха',
                        image: 'img/content/turtle.jpg',
                        audioSrc: 'audio/turtle.mp3'
                    },
                    {
                        word: 'dolphin',
                        translation: 'дельфин',
                        image: 'img/content/dolphin.jpg',
                        audioSrc: 'audio/dolphin.mp3'
                    }
                ]
            }],
            ['clothes-0', {
                title: "Clothes",
                cards: [
                    {
                        word: 'skirt',
                        translation: 'юбка',
                        image: 'img/content/skirt.jpg',
                        audioSrc: 'audio/skirt.mp3'
                    },
                    {
                        word: 'pants',
                        translation: 'брюки',
                        image: 'img/content/pants.jpg',
                        audioSrc: 'audio/pants.mp3'
                    },
                    {
                        word: 'blouse',
                        translation: 'блузка',
                        image: 'img/content/blouse.jpg',
                        audioSrc: 'audio/blouse.mp3'
                    },
                    {
                        word: 'dress',
                        translation: 'платье',
                        image: 'img/content/dress.jpg',
                        audioSrc: 'audio/dress.mp3'
                    },
                    {
                        word: 'boot',
                        translation: 'ботинок',
                        image: 'img/content/boot.jpg',
                        audioSrc: 'audio/boot.mp3'
                    },
                    {
                        word: 'shirt',
                        translation: 'рубашка',
                        image: 'img/content/shirt.jpg',
                        audioSrc: 'audio/shirt.mp3'
                    },
                    {
                        word: 'coat',
                        translation: 'пальто',
                        image: 'img/content/coat.jpg',
                        audioSrc: 'audio/coat.mp3'
                    },
                    {
                        word: 'shoe',
                        translation: 'туфли',
                        image: 'img/content/shoe.jpg',
                        audioSrc: 'audio/shoe.mp3'
                    }
                ]
            }],
            ['emotion-0', {
                title: "Emotion",
                cards: [{
                    word: 'sad',
                    translation: 'грустный',
                    image: 'img/content/sad.jpg',
                    audioSrc: 'audio/sad.mp3'
                },
                    {
                        word: 'angry',
                        translation: 'сердитый',
                        image: 'img/content/angry.jpg',
                        audioSrc: 'audio/angry.mp3'
                    },
                    // {
                    //     word: 'happy',
                    //     translation: 'счастливый',
                    //     image: 'img/content/happy.jpg',
                    //     audioSrc: 'audio/happy.mp3'
                    // },
                    // {
                    //     word: 'tired',
                    //     translation: 'уставший',
                    //     image: 'img/content/tired.jpg',
                    //     audioSrc: 'audio/tired.mp3'
                    // },
                    // {
                    //     word: 'surprised',
                    //     translation: 'удивлённый',
                    //     image: 'img/content/surprised.jpg',
                    //     audioSrc: 'audio/surprised.mp3'
                    // },
                    // {
                    //     word: 'scared',
                    //     translation: 'испуганный',
                    //     image: 'img/content/scared.jpg',
                    //     audioSrc: 'audio/scared.mp3'
                    // },
                    // {
                    //     word: 'smile',
                    //     translation: 'улыбка',
                    //     image: 'img/content/smile.jpg',
                    //     audioSrc: 'audio/smile.mp3'
                    // },
                    // {
                    //     word: 'laugh',
                    //     translation: 'смех',
                    //     image: 'img/content/laugh.jpg',
                    //     audioSrc: 'audio/laugh.mp3'
                    // }
                ]
            }]

        ]);

        function render() {
            const {setId} = history?.state,
                {contentContainer} = window
            let fragment = document.createDocumentFragment();
            console.log('render with', setId)
            if (setId) {
                fragment.append(starsCreate())
                fragment.appendChild(cardsCreate());
                fragment.appendChild(startGameButtonCreate())

            } else {
                // fragment.appendChild(createMainPage())
                console.log('recreate main page')
            }

            contentContainer.innerHTML = ''
            contentContainer.append(fragment)

            // rotate cards
            document.querySelectorAll('.set-card').forEach(cardEl => {
                cardEl.querySelector('.rotate-block').addEventListener('click', () => cardEl.classList.add('rotate')
        )
            ;
            cardEl.addEventListener('mouseleave', () => cardEl.classList.remove('rotate')
        )
            ;
        })
            // start button => repeat button
            const startGameButton = document.querySelector('.game-button');

            startGameButton.addEventListener('click', (() => {
                const handlers = gameHandlers({orderList: randomNumbersArray()});
                //смотреть на класс/переменную игра идёт на body
                return () => {
                    if (startGameButton.classList.contains('game-button')) {
                        // handlers = gameHandlers({orderList: randomNumbersArray()})
                        document.querySelectorAll('.set-card').forEach((el, index) => el.addEventListener('click', () =>  {
                            handlers.check(el, index);
                        }))
                        handlers.audioWord.play();
                    }
                    startGameButton.classList.add('repeat-button');
                    startGameButton.classList.remove('game-button');

                    if (startGameButton.classList.contains('repeat-button')) {
                        console.log('REPEAT', handlers)
                        handlers.audioWord.play();
                    }
                }
            })());
            // const repeatButton = document.querySelector('.repeat-button');
            // console.log(repeatButton)
        //     repeatButton.addEventListener('click', () =>{
        //         handlers.audioWord.play();
        // })
        }

        function gameHandlers({orderList}) {
            let currentIndex = 0;
            let gameErrors = [];
            const mainContainer = document.getElementById('contentContainer'),
                errorSign = new Audio('assets/audio/error.mp3'),
                failureSign = new Audio('assets/audio/failure.mp3'),
                successSign = new Audio('assets/audio/success.mp3'),
                correctSign = new Audio('assets/audio/correct.mp3')
            console.log(orderList);

            return {
                get currentId() {
                    return [...orderList][currentIndex];
                },
                get audioWord() {
                    return new Audio(`/assets/${setData.get(history.state.setId).cards[this.currentId].audioSrc}`);
                },
                next() {
                    //Проверить не пора ли завершить игру
                    // currentIndex++;
                    // if (this.currentId === undefined) {
                    //     console.log('RESULTS')
                    // }
                    //
                    // if (currentIndex < orderList.size) {
                    //     currentIndex++;
                    // } else {
                    //     console.log('RESULTS')
                    // }
                    // if (currentIndex < orderList.size) {
                    console.log('OK', currentIndex, this.currentId);

                    currentIndex++
                    if (currentIndex < orderList.size)
                        setTimeout(() => this.audioWord.play(), 1000)

                    if (currentIndex === orderList.size) {
                        console.log('RESULTS')
                        if (gameErrors.length === 0){
                            mainContainer.innerHTML = '<div class="result-block success"><p>Win!</p><img src="img/content/success.jpg"></div>';
                            successSign.play()
                        }
                    else{
                            mainContainer.innerHTML = `<div class="result-block fail"><p> ${gameErrors.length} errors</p><img src="img/content/failure.jpg"></div>`;
                            failureSign.play()
                    }
                    document.body.classList.add('results')
                    }
                    // }
                },
                check(el, index) {
                    console.log(currentIndex, this.currentId)
                    const star = starCreate(),
                        isWrongChoice = index !== this.currentId
                    if (isWrongChoice) {
                        star.classList.add('error');
                        console.log('STAR')
                        console.log('ERROR', currentIndex, this.currentId, orderList);
                        gameErrors.push('error');
                        errorSign.play();

                        // return gameErrors;
                    }
                    else{
                        el.classList.add('inactive');
                        star.classList.add('success');
                        correctSign.play()
                    }

                    document.querySelector('.raiting-stars').append(star)

                    if (!isWrongChoice) this.next();
                    // if (index === this.currentId) {
                    //     console.log("OK", index, this.currentId, this);
                    //     this.next();
                    // } else {
                    //     console.log('ERROR', index, this.currentId)
                    // }
                }
            }
        }

        function randomNumbersArray() {
            let randomArray = new Set(),
                currentSet = setData.get(history.state.setId).cards
            while (randomArray.size < currentSet.length)
                randomArray.add(parseInt(Math.random() * currentSet.length)) //currenSet[...].word
            return randomArray;
        }

        window.onpopstate = function () {
            console.log('onpopstate', history.state)
            render();
        };

        function startGameButtonCreate() {
            const button = document.createElement('button');
            button.classList.add('button', 'game-button');
            button.innerText = 'Start game'
            return button
        }

        function cardsCreate() {
            const cardsContainer = document.createElement('div')
            cardsContainer.classList.add('categories-container');
            const {setId} = history.state;
            setData.get(setId).cards.forEach(function (cardData) {
                cardsContainer.appendChild(cardCreate(cardData));
            });
            return cardsContainer;
        }

        function cardCreate(data) {
            const card = document.createElement('div');
            card.classList.add('set-card')
            card.insertAdjacentHTML("beforeend", `
               <div class='front'>
                   <img src=${data.image}>
                   <p>${data.word}</p>
                   <div class='rotate-block'></div>
               </div>
               <div class="back">
                   <img src=${data.image}>
                   <p>${data.translation}</p>
               </div>
         `)
            return card
        }


        function navigateToSet(event, {setId, setName}) {
            history.pushState({setId}, setName)
            render()
        }

        // toggle theme
        function toggleThemes(el) {
            const body = document.body
            if (el.classList.contains('green')) {

                el.classList.remove('green');
                el.classList.add('orange');
                if (body.classList.contains(el.dataset.on)) {
                    body.classList.remove(el.dataset.on);
                }
                body.classList.add(el.dataset.off);

            } else if (el.classList.contains('orange')) {
                el.classList.remove('orange');
                el.classList.add('green')
                if (body.classList.contains(el.dataset.off)) {
                    body.classList.remove(el.dataset.off);
                }
                body.classList.add(el.dataset.on);
            }
        }
        // end toggle theme
        const toggleMenuInput = document.getElementById('toggle-menu');
        const menuLinks = document.querySelectorAll('.header-link');
        // (function hideMenu(){
        menuLinks.forEach((el) => el.addEventListener('click', function () {
            toggleMenuInput.checked = false;
        }));



        // main page
        // function createMainPage() {
        //     const mainPageContainer = document.createElement('div')
        //     mainPageContainer.classList.add('categories-container', 'main-container');
        //     const {setId} = history.state;
        //     setData.get(setId).cards.forEach(function (cardData) {
        //         cardsContainer.appendChild(cardCreate(cardData));
        //     });
        //     return cardsContainer;
        // }
        // stars create

        function starsCreate() {
            const starsContainer = document.createElement('div');
            starsContainer.classList.add('raiting-stars');
            // starsContainer.appendChild(starCreate());
            return starsContainer;

        }

        function starCreate() {
            const star = document.createElement('div');
            star.classList.add('star');
            return star;
        }







